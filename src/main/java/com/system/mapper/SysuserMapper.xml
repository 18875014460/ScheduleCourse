<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.system.mapper.SysuserMapper">
  <resultMap id="BaseResultMap" type="com.system.po.Sysuser">
    <!--@mbg.generated-->
    <!--@Table sysuser-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="persname" jdbcType="VARCHAR" property="persname" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="classname" jdbcType="VARCHAR" property="classname" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, username, persname, sex, phone, classname
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from sysuser
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from sysuser
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.system.po.Sysuser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sysuser (username, persname, sex, 
      phone, classname)
    values (#{username,jdbcType=VARCHAR}, #{persname,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{classname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.system.po.Sysuser" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sysuser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="persname != null">
        persname,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="classname != null">
        classname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="persname != null">
        #{persname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="classname != null">
        #{classname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.system.po.Sysuser">
    <!--@mbg.generated-->
    update sysuser
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="persname != null">
        persname = #{persname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="classname != null">
        classname = #{classname,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.system.po.Sysuser">
    <!--@mbg.generated-->
    update sysuser
    set username = #{username,jdbcType=VARCHAR},
      persname = #{persname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      classname = #{classname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getCount" resultType="java.lang.Integer">
    select count(*) from sysuser
  </select>

  <select id="getClassCount" resultType="Sysuser">
    select *
from sysuser s GROUP BY s.classname
  </select>


  <select id="findByPaging" parameterType="PagingVO" resultType="Sysuser">
    select *
    from sysuser
    limit #{toPageNo}, #{pageSize}
  </select>

  <select id="findCSByPaging" parameterType="PagingVO" resultType="ClassCourse">
    select s.classname,count(s.id) studentnum,case when (select GROUP_CONCAT(id) from course_class where classname=s.classname) is null  then '未排课' else '已排课' end isSchedule
    from sysuser s GROUP BY s.classname
    limit #{toPageNo}, #{pageSize}
  </select>

  <select id="selectByUsername" resultType="Sysuser">
    select * from sysuser where username = #{username,jdbcType=VARCHAR}
  </select>
  <select id="selectLikeByUsername" resultType="Sysuser">
    select * from sysuser where persname like #{findname}
  </select>
</mapper>